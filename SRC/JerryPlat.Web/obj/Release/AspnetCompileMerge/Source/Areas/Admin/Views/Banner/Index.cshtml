<div class="my-main-body-button">
    <span class="my-main-body-title">
        <i class="el-icon-view"></i>
        Banner图管理
    </span>
    <el-select v-model="BannerTypeId" placeholder="请选择Banner类型">
        <el-option :key="0" label="所有类型" :value="0"></el-option>
        <el-option v-for="item in BannerTypeList"
                   :key="item.Id"
                   :label="item.Name"
                   :value="item.Id">
        </el-option>
    </el-select>
    <el-button type="primary" @@click="handleAdd()"><i class="el-icon-plus"></i> 添加</el-button>
    <el-button type="danger" @@click="handleDeleteList()"><i class="el-icon-delete"></i> 批量删除</el-button>
</div>
<el-table :data="List.Data" border stripe
          header-row-class-name="my-main-body-table-header"
          @@selection-change="handleSelectionChange"
          @@sort-change="function(sort){handleSortChange(sort,'List');}"
          style="width: 100%">
    <el-table-column type="selection" width="55" align="center"></el-table-column>
    <el-table-column label="文章类型" prop="ArticleType">
        <template slot-scope="scope">
            {{getItemValue(BannerTypeList, scope.row.BannerType)}}
        </template>
    </el-table-column>
    <el-table-column label="Banner图">
        <template slot-scope="scope">
            <img class="my-pic-detail" v-bind:src="scope.row.PicPath" v-if="existFile(scope.row.PicPath)" />
        </template>
    </el-table-column>
    <el-table-column label="链接" prop="PicUrl" sortable="custom"></el-table-column>
    <el-table-column label="排序" prop="OrderIndex" sortable="custom"></el-table-column>
    <el-table-column label="操作" width="180" align="center">
        <template slot-scope="scope">
            <el-button size="mini" @@click="handleEdit(scope.$index, scope.row)"><i class="el-icon-edit"></i> 编辑</el-button>
            <el-button size="mini" type="danger" @@click="handleDelete(scope.$index, scope.row)"><i class="el-icon-delete"></i> 删除</el-button>
        </template>
    </el-table-column>
</el-table>

@Html.Partial("_pagination", "List")

@Html.Partial("Edit")

@section js{
<script>
    function getVueOptions() {
        return helper.getPageVueOptions("Banner", function () {
           return @Html.Raw(TypeHelper.ToJson<Banner>());
        }, {
            data: {
                BannerTypeId: 0,
                BannerTypeList: [
                    { Id: 1, Name: "移动端首页" },
                    { Id: 2, Name: "习题库首页" },
                    { Id: 3, Name: "题目页面" },
                ]
            },
            watch: {
                "BannerTypeId": function (val) {
                    this.getDataList();
                }
            },
            methods: {
                getSearchModel: function (table) {
                    table = table || helper.default.Vue.DefaultTable;
                    return {
                        Id: this.BannerTypeId,
                        PageParam: helper.getContext(this, table).PageParam,
                        Sort: this[table].Sort
                    };
                },
                handleAddBefore: function (model) {
                    model.BannerType = this.BannerTypeList[0].Id;
                    return model;
                }
            }
        });
    }
</script>
}