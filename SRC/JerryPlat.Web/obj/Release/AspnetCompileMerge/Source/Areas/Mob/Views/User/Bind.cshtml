<mt-header class="my-header-danger" title="请填写报名信息">
    <mt-button slot="left" icon="back" @@click="goBack()">返回</mt-button>
    <span slot="right">{{Location.City}}</span>
</mt-header>

<mt-field label="姓名" placeholder="姓名" v-model="Model.Name" :class="getValidClass(Model.Name)"></mt-field>
<mt-field label="选择科目" placeholder="选择科目" v-model="Model.Course" :readonly="true" :class="getValidClass(Model.Course)">
    <mt-button icon="more" @@click="CoursePickerVisible=true" type="danger"></mt-button>
</mt-field>
<mt-field label="选择城市" placeholder="选择城市" v-model="Model.City" :readonly="true" :class="getValidClass(Model.City)">
    <mt-button icon="more" @@click="CityPickerVisible=true" type="danger"></mt-button>
</mt-field>
<mt-field label="身份证号" placeholder="身份证号" v-model="Model.IdCard" :class="getValidClass(Model.IdCard, 'isIdCard')"></mt-field>
<mt-field label="手机号码" placeholder="手机号码" type="tel" v-model="Model.Phone" :class="getValidClass(Model.Phone, 'isTel')"></mt-field>
<mt-field label="验证码" placeholder="验证码" v-model="Model.Code" :class="getValidClass(Model.Code, 'isVerifyCode')">
    <img class="my-mob-verifycode" v-bind:src="VerifyCodeUrl" @@click="resetVerifyCode()"/>
</mt-field>

<div class="my-submit">
    <mt-button type="danger" @@click="submit()">立即报名</mt-button>
</div>
<mt-popup v-model="CoursePickerVisible"
          class="my-mint-popup"
          popup-transition="popup-fade">
    <div class="my-popup-button">
        <mt-button type="danger" @@click="CoursePickerVisible=false">确定</mt-button>
    </div>
    <mt-picker :slots="CourseSlots"
               value-key="Name"
               @@change="onCourseChange">
    </mt-picker>
</mt-popup>

<mt-popup v-model="CityPickerVisible"
          class="my-mint-popup"
          popup-transition="popup-fade">
    <div class="my-popup-button">
        <mt-button type="danger" @@click="CityPickerVisible=false">确定</mt-button>
    </div>
    <mt-picker :slots="CitySlots"
               value-key="Name"
               @@change="onCityChange">
    </mt-picker>
</mt-popup>

@section js{
    <script>
    function getVueOptions() {
        return helper.getVueModelOptions({
            data: {
                CoursePickerVisible: false,
                CityPickerVisible: false,
                CourseSlots: [],
                CitySlots: [],
                VerifyCodeUrl: "",
                Model: {
                    Name: null,
                    Course: null,
                    City: null,
                    IdCard: null,
                    Phone: null,
                    Code: null
                }
            },
            methods: {
                initPage: function () {
                    var _this = this;
                    _this.resetVerifyCode();
                    helper.post("/Mob/Home/GetCourseList", helper.default.AllPageParam, function (data) {
                        _this.CourseSlots = _this.getSlots(data.Data);
                        if (data.Data.length > 0) {
                            _this.Model.Course = data.Data[0].Name;
                        }
                    });

                    helper.post("/Mob/Home/GetCityList", helper.default.AllPageParam, function (data) {
                        _this.CitySlots = _this.getSlots(data.Data);
                        if (data.Data.length > 0) {
                            _this.Model.City = data.Data[0].Name;
                        }
                    });
                },
                getSlots: function (data) {
                    return [{
                        flex: 1,
                        values: data || []
                    }];
                },
                onCourseChange: function (picker, values) {
                    if (values.length == 0) {
                        return;
                    }
                    this.Model.Course = values[0].Name;
                    //this.CoursePickerVisible = false;
                },
                onCityChange: function (picker, values) {
                    if (values.length == 0) {
                        return;
                    }
                    this.Model.City = values[0].Name;
                    //this.CityPickerVisible = false;
                },
                getValidClass: function (value, cmd) {
                    var callback = helper[cmd] || function () { return true; };
                    return (helper.isNullOrEmpty(value) || !callback(value)) ? "my-invalid-input" : "";
                },
                resetVerifyCode: function () {
                    this.VerifyCodeUrl = "/VerifyCode?" + Math.random();
                },
                submit: function () {

                }
            }
        });
    }
    </script>
}