@{ 
    MemberDto member = SessionHelper.Mob.GetSession<Member>() ?? new Member();

    MemberDto dto = new MemberDto
    {
        NickName = member.NickName,
        Latitude = member.Latitude,
        Longitude = member.Longitude,
        Precision = member.Precision
    };
}
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
        <meta name="format-detection" content="telephone=no">
        <meta http-equiv="x-rim-auto-match" content="none">
        <title>邦邦学车 - 移动端</title>
        @Styles.Render("~/content/mobbase")
        @RenderSection("css", false)
        <script charset="utf-8" src="http://map.qq.com/api/js"></script>
        <script src="/Resource/Constant.js"></script>
        <script src="/Scripts/jquery-3.3.1.min.js"></script>
        <script src="/Scripts/jquery.cookie.js"></script>
        <script src="/Scripts/vue.min.js"></script>
        <script src="/Scripts/vue.mint.ui.2.2.13.min.js"></script>
        <script src="/Scripts/vue.jerry.helper.mob.js"></script>
        
        @*@Scripts.Render("~/script/mobbase")*@
       
    </head>
    <body>
        @Html.AntiForgeryToken()
        <div id="JerryPlatApp" class="my-app" v-cloak>
            @RenderBody()
        </div>
        @RenderSection("js", false)

        <script>
            (function(){
                var vueOptions = $.extend(true, getVueOptions(), {
                    data:{
                        IsSetLocation:false,
                        Location: {
                            City: "",
                            District: ""
                        },
                        Session:@Html.Raw(SerializationHelper.ToJson(dto))
                    },created: function () {
                        this.resetLocation();
                        this.initPage();
                    },
                    methods: {
                        resetLocation: function(res){
                            var _this = this;
                            if(res != null){
                                _this.Session.Latitude = res.latitude;
                                _this.Session.Longitude = res.longitude;
                                _this.Session.Precision = res.accuracy;
                            }
                            
                            if (_this.Session.Latitude != null && _this.Session.Longitude != null) {
                                helper.getLocation(_this.Session, function (result) {
                                    _this.Location.City = result.detail.addressComponents.city + "-" + result.detail.addressComponents.district;
                                    _this.Location.District = result.detail.addressComponents.district;
                                    _this.IsSetLocation = true;
                                });
                            }else{
                                _this.IsSetLocation = true;
                            }
                        }
                    }
                });
                vueApp = new Vue(vueOptions);
            })();
        </script>
    </body>
</html>