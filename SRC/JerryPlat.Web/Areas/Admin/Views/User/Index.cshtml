<div class="my-main-body-button">
    <span class="my-main-body-title">
        <i class="el-icon-view"></i>
        用户管理
    </span>
    <el-select v-model="GroupId" placeholder="请选择用户组">
        <el-option :key="0" label="所有用户" :value="0"></el-option>
        <el-option v-for="item in GroupList"
                   :key="item.Id"
                   :label="item.Name"
                   :value="item.Id">
        </el-option>
    </el-select>
    <el-button type="primary" @@click="handleAdd()"><i class="el-icon-plus"></i> 添加</el-button>
    <el-button type="danger" @@click="handleDeleteList()"><i class="el-icon-delete"></i> 批量删除</el-button>
</div>
<el-table :data="List.Data" border stripe
          header-row-class-name="my-main-body-table-header"
          @@selection-change="handleSelectionChange"
          @@sort-change="function(sort){handleSortChange(sort,'List');}"
          style="width: 100%">
    <el-table-column type="selection" width="55" align="center"></el-table-column>
    <el-table-column label="用户名" width="120" prop="UserName" sortable="custom">
        <template slot-scope="scope">
            {{scope.row.AdminUser.UserName}}
        </template>
    </el-table-column>
    <el-table-column label="用户组" prop="GroupName"></el-table-column>
    <el-table-column label="操作" width="180" align="center">
        <template slot-scope="scope">
            <el-button size="mini" @@click="handleEdit(scope.$index, scope.row.AdminUser)"><i class="el-icon-edit"></i> 编辑</el-button>
            <el-button size="mini" type="danger" @@click="handleDelete(scope.$index, scope.row.AdminUser)"><i class="el-icon-delete"></i> 删除</el-button>
        </template>
    </el-table-column>
</el-table>

@Html.Partial("_pagination", "List")

@Html.Partial("Edit")

@section js{
    <script>
    function getVueOptions() {
        return helper.getPageVueOptions("User", function () {
            return @Html.Raw(TypeHelper.ToJson<AdminUser>());
        }, {
            data: {
                GroupId: 0,
                DefaultGroupId: 0,
                GroupList: []
            },
            mounted: function () {
                var _this = this;
                helper.post("/Admin/Group/GetList", helper.default.AllPageParam, function (data) {
                    _this.GroupList = data.Data;
                    if (_this.GroupList.length > 0) {
                        _this.DefaultGroupId = _this.GroupList[0].Id;
                    }
                });
            },
            watch: {
                "GroupId": function (val) {
                    this.getDataList();
                }
            },
            methods: {
                getSearchModel: function (table) {
                    table = table || _dehelper.defaultfault.Vue.DefaultTable;
                    return {
                        Id: this.GroupId || 0,
                        PageParam: helper.getContext(this, table).PageParam,
                        Sort: this[table].Sort
                    };
                },
                handleAddBefore: function (model) {
                    model.GroupId = this.GroupId == 0 ? this.DefaultGroupId : this.GroupId;
                    model.Password = "@(SystemConfigModel.Instance.DefaultPassword)";
                    return model;
                }
            }
        });
    }
    </script>
}